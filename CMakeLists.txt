CMAKE_MINIMUM_REQUIRED(VERSION 3.31)

SET(PROJECTNAME LinearLib)

PROJECT(${PROJECTNAME}
    VERSION 0.0.1
    LANGUAGES CXX
    DESCRIPTION "A Linear Algebra Library."
)

SET(ROOT_DIR .)

INCLUDE_DIRECTORIES(
    ${ROOT_DIR}/include
    ${ROOT_DIR}/third-party/include
    ${ROOT_DIR}/third-party/lib/catch2
    ${ROOT_DIR}/third-party/include/catch2
)

FILE(GLOB_RECURSE PROJECT_HEADERS ${ROOT_DIR}/include/*.hpp)
FILE(GLOB_RECURSE TEST_SOURCES ${ROOT_DIR}/tests/*.cpp)
FILE(GLOB_RECURSE BENCHMARK_SOURCES ${ROOT_DIR}/benchmarks/*.cpp)
FILE(GLOB_RECURSE THIRD_PARTY_SOURCES ${ROOT_DIR}/third-party/lib/*.cpp)
FILE(GLOB_RECURSE THIRD_PARTY_HEADERS ${ROOT_DIR}/third-party/include/*.hpp)

SET(CMAKE_CXX_STANDARD 23)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

ADD_LIBRARY(LinearLib STATIC ${PROJECT_HEADERS}
        ${THIRD_PARTY_SOURCES}
        ${THIRD_PARTY_HEADERS})

# Enable testing
ENABLE_TESTING()

# Add Catch2 main source
SET(CATCH_SOURCE ${ROOT_DIR}/third-party/lib/catch2/catch_amalgamated.cpp)

# Add test executable
ADD_EXECUTABLE(${PROJECTNAME}_Tests
    ${TEST_SOURCES}
    ${CATCH_SOURCE}
)

# Link the test executable with the main library
TARGET_LINK_LIBRARIES(${PROJECTNAME}_Tests PRIVATE ${PROJECTNAME})

# Add tests to CTest
ADD_TEST(NAME ${PROJECTNAME}_Tests COMMAND ${PROJECTNAME}_Tests)

ADD_EXECUTABLE(${PROJECTNAME}_Benchmarks
    ${BENCHMARK_SOURCES}
    ${CATCH_SOURCE}
)

TARGET_LINK_LIBRARIES(${PROJECTNAME}_Benchmarks PRIVATE ${PROJECTNAME})

ADD_TEST(NAME ${PROJECTNAME}_Benchmarks COMMAND ${PROJECTNAME}_Benchmarks)

# Packaging
SET(OUT_DIR out)
SET(CPACK_PACKAGE_DIRECTORY ${OUT_DIR})

INSTALL(DIRECTORY ${ROOT_DIR}/include/
    DESTINATION ${ROOT_DIR}/include/
    FILES_MATCHING PATTERN "*.hpp")

SET(CPACK_PACKAGE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_DESCRIPTION "A Linear Algebra Library.")

SET(CPACK_PACKAGE_LICENSE "APACHE")
SET(CPACK_RESOURCE_FILE_LICENSE ${CMAKE_CURRENT_SOURCE_DIR}/LICENSE-APACHE.txt)

SET(CPACK_GENERATOR "TGZ;ZIP")

INCLUDE(CPack)